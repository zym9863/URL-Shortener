import { Hono } from 'hono'
import { cors } from 'hono/cors'
import {
  generateUniqueShortCode,
  isValidUrl,
  normalizeUrl,
  createUrlData,
  type UrlData
} from './utils'

// ÂÆö‰πâ KV ÂëΩÂêçÁ©∫Èó¥Á±ªÂûã
interface KVNamespace {
  get(key: string): Promise<string | null>
  put(key: string, value: string): Promise<void>
  delete(key: string): Promise<void>
}

// ÂÆö‰πâÁéØÂ¢ÉÂèòÈáèÁ±ªÂûã
type Bindings = {
  URL_STORE: KVNamespace
}

const app = new Hono<{ Bindings: Bindings }>()

// ÂêØÁî® CORS 
app.use('*', cors({
  origin: '*',
  allowMethods: ['GET', 'POST', 'PUT', 'DELETE', 'OPTIONS'],
  allowHeaders: ['Content-Type', 'Authorization']
}))

// ÂÅ•Â∫∑Ê£ÄÊü•Á´ØÁÇπ
app.get('/health', (c) => {
  return c.json({ 
    status: 'healthy', 
    timestamp: new Date().toISOString(),
    service: 'URL Shortener'
  })
})

// ÂÖ®Â±ÄÈîôËØØÂ§ÑÁêÜ
app.onError((err, c) => {
  return c.json({
    error: 'ÊúçÂä°Âô®ÂÜÖÈÉ®ÈîôËØØ',
    message: err.message,
    timestamp: new Date().toISOString()
  }, 500)
})

// È¶ñÈ°µ - ËøîÂõûÁé∞‰ª£ÂåñÁöÑ HTML ÁïåÈù¢
app.get('/', (c) => {
  const html = `
<!DOCTYPE html>
<html lang="zh-CN">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>URL Áº©Áü≠ÊúçÂä° - ÁÆÄÊ¥Å„ÄÅÂÆâÂÖ®„ÄÅÈ´òÊïà</title>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap" rel="stylesheet">
    <style>
        :root {
            --primary-color: #3b82f6;
            --primary-hover: #2563eb;
            --primary-light: #dbeafe;
            --secondary-color: #f8fafc;
            --text-primary: #0f172a;
            --text-secondary: #64748b;
            --border-color: #e2e8f0;
            --success-color: #10b981;
            --success-bg: #ecfdf5;
            --error-color: #ef4444;
            --error-bg: #fef2f2;
            --shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);
            --shadow-lg: 0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04);
            --border-radius: 8px;
            --border-radius-lg: 12px;
        }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
            padding: 20px;
            line-height: 1.6;
        }

        .container {
            max-width: 480px;
            margin: 0 auto;
            background: white;
            border-radius: var(--border-radius-lg);
            box-shadow: var(--shadow-lg);
            overflow: hidden;
            animation: slideUp 0.6s ease-out;
        }

        @keyframes slideUp {
            from {
                opacity: 0;
                transform: translateY(30px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        .header {
            background: linear-gradient(135deg, var(--primary-color), var(--primary-hover));
            color: white;
            padding: 32px 24px;
            text-align: center;
        }

        .header h1 {
            font-size: 28px;
            font-weight: 700;
            margin-bottom: 8px;
            letter-spacing: -0.025em;
        }

        .header p {
            opacity: 0.9;
            font-size: 15px;
            font-weight: 400;
        }

        .content {
            padding: 32px 24px;
        }

        .form-section {
            margin-bottom: 32px;
        }

        .section-title {
            font-size: 18px;
            font-weight: 600;
            color: var(--text-primary);
            margin-bottom: 20px;
            display: flex;
            align-items: center;
            gap: 8px;
        }

        .form-group {
            margin-bottom: 20px;
        }

        label {
            display: block;
            margin-bottom: 6px;
            font-weight: 500;
            color: var(--text-primary);
            font-size: 14px;
        }

        input[type="url"], 
        input[type="text"], 
        input[type="number"] {
            width: 100%;
            padding: 12px 16px;
            border: 2px solid var(--border-color);
            border-radius: var(--border-radius);
            font-size: 16px;
            transition: all 0.2s ease;
            background: white;
        }

        input[type="url"]:focus, 
        input[type="text"]:focus, 
        input[type="number"]:focus {
            outline: none;
            border-color: var(--primary-color);
            box-shadow: 0 0 0 3px var(--primary-light);
        }

        .btn {
            background: var(--primary-color);
            color: white;
            padding: 14px 24px;
            border: none;
            border-radius: var(--border-radius);
            cursor: pointer;
            font-size: 16px;
            font-weight: 600;
            width: 100%;
            transition: all 0.2s ease;
            position: relative;
            overflow: hidden;
        }

        .btn:hover {
            background: var(--primary-hover);
            transform: translateY(-1px);
            box-shadow: var(--shadow);
        }

        .btn:active {
            transform: translateY(0);
        }

        .btn-secondary {
            background: var(--text-secondary);
            flex: 1;
        }

        .btn-secondary:hover {
            background: #475569;
        }

        .btn-danger {
            background: var(--error-color);
            flex: 1;
        }

        .btn-danger:hover {
            background: #dc2626;
        }

        .btn-group {
            display: flex;
            gap: 12px;
        }

        .result {
            margin-top: 24px;
            padding: 20px;
            border-radius: var(--border-radius);
            display: none;
            animation: fadeIn 0.3s ease-out;
        }

        @keyframes fadeIn {
            from { opacity: 0; transform: translateY(10px); }
            to { opacity: 1; transform: translateY(0); }
        }

        .result.success {
            background: var(--success-bg);
            border: 1px solid #a7f3d0;
            color: #065f46;
        }

        .result.error {
            background: var(--error-bg);
            border: 1px solid #fecaca;
            color: #991b1b;
        }

        .result h3 {
            font-size: 16px;
            font-weight: 600;
            margin-bottom: 12px;
        }

        .result p {
            margin-bottom: 8px;
            font-size: 14px;
        }

        .short-url {
            font-weight: 600;
            word-break: break-all;
            background: rgba(59, 130, 246, 0.1);
            padding: 8px 12px;
            border-radius: 6px;
            font-family: 'Monaco', 'Menlo', monospace;
            font-size: 13px;
        }

        .copy-btn {
            background: var(--success-color);
            color: white;
            border: none;
            padding: 8px 16px;
            border-radius: 6px;
            font-size: 14px;
            font-weight: 500;
            cursor: pointer;
            margin-top: 12px;
            transition: all 0.2s ease;
        }

        .copy-btn:hover {
            background: #059669;
        }

        .divider {
            height: 1px;
            background: var(--border-color);
            margin: 32px 0;
        }

        .feature-grid {
            display: grid;
            grid-template-columns: repeat(3, 1fr);
            gap: 16px;
            margin-top: 24px;
            padding: 24px;
            background: var(--secondary-color);
            border-radius: var(--border-radius);
        }

        .feature {
            text-align: center;
            padding: 16px 8px;
        }

        .feature-icon {
            font-size: 24px;
            margin-bottom: 8px;
        }

        .feature-title {
            font-size: 12px;
            font-weight: 600;
            color: var(--text-primary);
            margin-bottom: 4px;
        }

        .feature-desc {
            font-size: 11px;
            color: var(--text-secondary);
        }

        @media (max-width: 640px) {
            .container {
                margin: 10px;
                border-radius: var(--border-radius);
            }

            .header {
                padding: 24px 20px;
            }

            .header h1 {
                font-size: 24px;
            }

            .content {
                padding: 24px 20px;
            }

            .feature-grid {
                grid-template-columns: 1fr;
                gap: 12px;
            }

            .btn-group {
                flex-direction: column;
            }
        }

        .loading {
            opacity: 0.7;
            pointer-events: none;
        }

        .loading::after {
            content: '';
            position: absolute;
            top: 50%;
            left: 50%;
            width: 20px;
            height: 20px;
            margin: -10px 0 0 -10px;
            border: 2px solid transparent;
            border-top: 2px solid currentColor;
            border-radius: 50%;
            animation: spin 1s linear infinite;
        }

        @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="header">
            <h1>üîó URL Áº©Áü≠ÊúçÂä°</h1>
            <p>ÁÆÄÊ¥Å„ÄÅÂÆâÂÖ®„ÄÅÈ´òÊïàÁöÑÈìæÊé•ÁÆ°ÁêÜÂ∑•ÂÖ∑</p>
        </div>
        
        <div class="content">
            <div class="form-section">
                <h2 class="section-title">
                    <span>üìé</span> ÂàõÂª∫Áü≠Èìæ
                </h2>
                <form id="shortenForm">
                    <div class="form-group">
                        <label for="originalUrl">ÂéüÂßã URL</label>
                        <input type="url" id="originalUrl" placeholder="https://example.com/very/long/url" required>
                    </div>
                    <div class="form-group">
                        <label for="customCode">Ëá™ÂÆö‰πâÁü≠Á†Å (ÂèØÈÄâ)</label>
                        <input type="text" id="customCode" placeholder="ÁïôÁ©∫Ëá™Âä®ÁîüÊàê" maxlength="10">
                    </div>
                    <div class="form-group">
                        <label for="expiresInDays">ËøáÊúüÂ§©Êï∞ (ÂèØÈÄâ)</label>
                        <input type="number" id="expiresInDays" placeholder="ÁïôÁ©∫Ê∞∏‰∏çËøáÊúü" min="1" max="365">
                    </div>
                    <button type="submit" class="btn" id="shortenBtn">ÁîüÊàêÁü≠Èìæ</button>
                </form>
                <div id="result" class="result"></div>
            </div>

            <div class="divider"></div>

            <div class="form-section">
                <h2 class="section-title">
                    <span>üìä</span> ÁÆ°ÁêÜÁü≠Èìæ
                </h2>
                <form id="manageForm">
                    <div class="form-group">
                        <label for="manageCode">Áü≠Á†Å</label>
                        <input type="text" id="manageCode" placeholder="ËæìÂÖ•Ë¶ÅÊü•ËØ¢ÁöÑÁü≠Á†Å" required>
                    </div>
                    <div class="btn-group">
                        <button type="button" class="btn btn-secondary" onclick="getStats()">Êü•ËØ¢ÁªüËÆ°</button>
                        <button type="button" class="btn btn-danger" onclick="deleteShortUrl()">Âà†Èô§Áü≠Èìæ</button>
                    </div>
                </form>
                <div id="manageResult" class="result"></div>
            </div>

            <div class="feature-grid">
                <div class="feature">
                    <div class="feature-icon">‚ö°</div>
                    <div class="feature-title">ÊûÅÈÄüÁîüÊàê</div>
                    <div class="feature-desc">ÁßíÁ∫ßÁîüÊàêÁü≠Èìæ</div>
                </div>
                <div class="feature">
                    <div class="feature-icon">üìà</div>
                    <div class="feature-title">Êï∞ÊçÆÁªüËÆ°</div>
                    <div class="feature-desc">ËØ¶ÁªÜËÆøÈóÆÂàÜÊûê</div>
                </div>
                <div class="feature">
                    <div class="feature-icon">üõ°Ô∏è</div>
                    <div class="feature-title">ÂÆâÂÖ®ÂèØÈù†</div>
                    <div class="feature-desc">‰ºÅ‰∏öÁ∫ßÂÆâÂÖ®</div>
                </div>
            </div>
        </div>
    </div>

    <script>
        // Ê∑ªÂä†Âä†ËΩΩÁä∂ÊÄÅÁÆ°ÁêÜ
        function setLoading(element, isLoading) {
            if (!element) return;
            if (isLoading) {
                element.classList.add('loading');
                element.disabled = true;
            } else {
                element.classList.remove('loading');
                element.disabled = false;
            }
        }

        // ÊòæÁ§∫ÁªìÊûúÁöÑÈÄöÁî®ÂáΩÊï∞
        function showResult(resultId, isSuccess, title, content) {
            const resultDiv = document.getElementById(resultId);
            resultDiv.className = \`result \${isSuccess ? 'success' : 'error'}\`;
            resultDiv.innerHTML = \`<h3>\${title}</h3>\${content}\`;
            resultDiv.style.display = 'block';
        }

        document.getElementById('shortenForm').addEventListener('submit', async (e) => {
            e.preventDefault();

            const originalUrl = document.getElementById('originalUrl').value;
            const customCode = document.getElementById('customCode').value;
            const expiresInDays = document.getElementById('expiresInDays').value;

            const shortenBtn = document.getElementById('shortenBtn');
            setLoading(shortenBtn, true);

            try {
                const requestBody = {
                    url: originalUrl,
                    customCode: customCode || undefined,
                    expiresInDays: expiresInDays ? parseInt(expiresInDays) : undefined
                };

                const response = await fetch('/api/shorten', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify(requestBody)
                });

                const data = await response.json();

                if (response.ok) {
                    const shortUrl = \`\${window.location.origin}/\${data.shortCode}\`;
                    let expiryInfo = data.expiresAt ?
                        \`<p><strong>ËøáÊúüÊó∂Èó¥:</strong> \${new Date(data.expiresAt).toLocaleString('zh-CN')}</p>\` :
                        '<p><strong>ËøáÊúüÊó∂Èó¥:</strong> Ê∞∏‰∏çËøáÊúü</p>';

                    const content = \`
                        <p><strong>Áü≠Èìæ:</strong></p>
                        <div class="short-url">\${shortUrl}</div>
                        <button class="copy-btn" onclick="copyToClipboard('\${shortUrl}')">üìã Â§çÂà∂Áü≠Èìæ</button>
                        <p style="margin-top: 16px;"><strong>ÂéüÂßã URL:</strong> \${data.originalUrl}</p>
                        \${expiryInfo}
                    \`;

                    showResult('result', true, 'üéâ Áü≠ÈìæÁîüÊàêÊàêÂäüÔºÅ', content);
                    
                    // Ê∏ÖÁ©∫Ë°®Âçï
                    document.getElementById('shortenForm').reset();
                } else {
                    showResult('result', false, '‚ùå ÁîüÊàêÂ§±Ë¥•', \`<p>\${data.error}</p>\`);
                }
            } catch (error) {
                showResult('result', false, '‚ùå ÁΩëÁªúÈîôËØØ', '<p>ËØ∑Ê£ÄÊü•ÁΩëÁªúËøûÊé•ÂêéÈáçËØï</p>');
            } finally {
                setLoading(shortenBtn, false);
            }
        });

        async function getStats() {
            const shortCode = document.getElementById('manageCode').value.trim();

            if (!shortCode) {
                showResult('manageResult', false, '‚ùå ËæìÂÖ•ÈîôËØØ', '<p>ËØ∑ËæìÂÖ•Áü≠Á†Å</p>');
                return;
            }

            // È™åËØÅÁü≠Á†ÅÊ†ºÂºè
            if (shortCode.length < 3 || shortCode.length > 10) {
                showResult('manageResult', false, '‚ùå Ê†ºÂºèÈîôËØØ', '<p>Áü≠Á†ÅÈïøÂ∫¶ÂøÖÈ°ªÂú®3-10‰Ωç‰πãÈó¥</p>');
                return;
            }

            if (!/^[a-zA-Z0-9]+$/.test(shortCode)) {
                showResult('manageResult', false, '‚ùå Ê†ºÂºèÈîôËØØ', '<p>Áü≠Á†ÅÂè™ËÉΩÂåÖÂê´Â≠óÊØçÂíåÊï∞Â≠ó</p>');
                return;
            }

            // ËÆæÁΩÆÊåâÈíÆÂä†ËΩΩÁä∂ÊÄÅ
            const statsBtn = document.querySelector('.btn-secondary');
            if (statsBtn) {
                setLoading(statsBtn, true);
                statsBtn.textContent = 'Êü•ËØ¢‰∏≠...';
            }

            let retryCount = 0;
            const maxRetries = 3;

            async function attemptRequest() {
                try {
                    const response = await fetch(\`/api/stats/\${encodeURIComponent(shortCode)}\`, {
                        method: 'GET',
                        headers: {
                            'Content-Type': 'application/json',
                            'Cache-Control': 'no-cache'
                        }
                    });

                    if (!response.ok) {
                        const errorData = await response.json().catch(() => ({ error: 'ÊúçÂä°Âô®ÂìçÂ∫îÈîôËØØ' }));
                        throw new Error(errorData.error || \`HTTP \${response.status}\`);
                    }

                    const data = await response.json();

                    if (data && typeof data === 'object') {
                        let expiryInfo = data.expiresAt ?
                            \`<p><strong>ËøáÊúüÊó∂Èó¥:</strong> \${new Date(data.expiresAt).toLocaleString('zh-CN')}</p>\` :
                            '<p><strong>ËøáÊúüÊó∂Èó¥:</strong> Ê∞∏‰∏çËøáÊúü</p>';
                        let lastAccessInfo = data.lastAccessed ?
                            \`<p><strong>ÊúÄÂêéËÆøÈóÆ:</strong> \${new Date(data.lastAccessed).toLocaleString('zh-CN')}</p>\` :
                            '<p><strong>ÊúÄÂêéËÆøÈóÆ:</strong> ‰ªéÊú™ËÆøÈóÆ</p>';

                        const content = \`
                            <p><strong>Áü≠Á†Å:</strong> \${data.shortCode || shortCode}</p>
                            <p><strong>ÂéüÂßã URL:</strong> \${data.originalUrl || 'Êú™Áü•'}</p>
                            <p><strong>ÂàõÂª∫Êó∂Èó¥:</strong> \${data.createdAt ? new Date(data.createdAt).toLocaleString('zh-CN') : 'Êú™Áü•'}</p>
                            \${expiryInfo}
                            <p><strong>ËÆøÈóÆÊ¨°Êï∞:</strong> \${data.clickCount || 0} Ê¨°</p>
                            \${lastAccessInfo}
                        \`;

                        showResult('manageResult', true, 'üìä ÁªüËÆ°‰ø°ÊÅØ', content);
                    } else {
                        throw new Error('ÊúçÂä°Âô®ËøîÂõûÊï∞ÊçÆÊ†ºÂºèÈîôËØØ');
                    }

                } catch (error) {
                    retryCount++;
                    
                    if (retryCount < maxRetries && (error.message.includes('fetch') || error.message.includes('ÁΩëÁªú'))) {
                        // ÁΩëÁªúÈîôËØØÔºåÂ∞ùËØïÈáçËØï
                        setTimeout(() => attemptRequest(), 1000 * retryCount);
                        return;
                    }
                    
                    let errorMessage = 'ËØ∑Ê£ÄÊü•ÁΩëÁªúËøûÊé•ÂêéÈáçËØï';
                    if (error.message.includes('‰∏çÂ≠òÂú®')) {
                        errorMessage = 'Áü≠Èìæ‰∏çÂ≠òÂú®ÔºåËØ∑Ê£ÄÊü•Áü≠Á†ÅÊòØÂê¶Ê≠£Á°Æ';
                    } else if (error.message.includes('Ê†ºÂºèÈîôËØØ') || error.message.includes('ÈïøÂ∫¶')) {
                        errorMessage = error.message;
                    } else if (error.message.includes('HTTP 500')) {
                        errorMessage = 'ÊúçÂä°Âô®ÂÜÖÈÉ®ÈîôËØØÔºåËØ∑Á®çÂêéÈáçËØï';
                    } else if (error.message.includes('HTTP 404')) {
                        errorMessage = 'Áü≠Èìæ‰∏çÂ≠òÂú®';
                    }

                    showResult('manageResult', false, '‚ùå Êü•ËØ¢Â§±Ë¥•', \`<p>\${errorMessage}</p>\`);
                }
            }

            try {
                await attemptRequest();
            } finally {
                // ÊÅ¢Â§çÊåâÈíÆÁä∂ÊÄÅ
                if (statsBtn) {
                    setLoading(statsBtn, false);
                    statsBtn.textContent = 'Êü•ËØ¢ÁªüËÆ°';
                }
            }
        }

        async function deleteShortUrl() {
            const shortCode = document.getElementById('manageCode').value.trim();

            if (!shortCode) {
                showResult('manageResult', false, '‚ùå ËæìÂÖ•ÈîôËØØ', '<p>ËØ∑ËæìÂÖ•Áü≠Á†Å</p>');
                return;
            }

            // È™åËØÅÁü≠Á†ÅÊ†ºÂºè
            if (shortCode.length < 3 || shortCode.length > 10) {
                showResult('manageResult', false, '‚ùå Ê†ºÂºèÈîôËØØ', '<p>Áü≠Á†ÅÈïøÂ∫¶ÂøÖÈ°ªÂú®3-10‰Ωç‰πãÈó¥</p>');
                return;
            }

            if (!/^[a-zA-Z0-9]+$/.test(shortCode)) {
                showResult('manageResult', false, '‚ùå Ê†ºÂºèÈîôËØØ', '<p>Áü≠Á†ÅÂè™ËÉΩÂåÖÂê´Â≠óÊØçÂíåÊï∞Â≠ó</p>');
                return;
            }

            if (!confirm('‚ö†Ô∏è Á°ÆÂÆöË¶ÅÂà†Èô§Ëøô‰∏™Áü≠ÈìæÂêóÔºü\\n\\nÊ≠§Êìç‰Ωú‰∏çÂèØÊí§ÈîÄÔºåÂà†Èô§ÂêéËØ•Áü≠ÈìæÂ∞ÜÊó†Ê≥ïËÆøÈóÆ„ÄÇ')) {
                return;
            }

            // ËÆæÁΩÆÊåâÈíÆÂä†ËΩΩÁä∂ÊÄÅ
            const deleteBtn = document.querySelector('.btn-danger');
            if (deleteBtn) {
                setLoading(deleteBtn, true);
                deleteBtn.textContent = 'Âà†Èô§‰∏≠...';
            }

            try {
                const response = await fetch(\`/api/\${encodeURIComponent(shortCode)}\`, {
                    method: 'DELETE',
                    headers: {
                        'Content-Type': 'application/json'
                    }
                });

                if (!response.ok) {
                    const errorData = await response.json().catch(() => ({ error: 'ÊúçÂä°Âô®ÂìçÂ∫îÈîôËØØ' }));
                    throw new Error(errorData.error || \`HTTP \${response.status}\`);
                }

                const data = await response.json();

                if (data && data.message) {
                    showResult('manageResult', true, '‚úÖ Âà†Èô§ÊàêÂäü', \`<p>\${data.message}</p>\`);
                    document.getElementById('manageCode').value = '';
                } else {
                    throw new Error('Âà†Èô§Êìç‰ΩúÊú™Á°ÆËÆ§');
                }

            } catch (error) {
                let errorMessage = 'ËØ∑Ê£ÄÊü•ÁΩëÁªúËøûÊé•ÂêéÈáçËØï';
                if (error.message.includes('‰∏çÂ≠òÂú®')) {
                    errorMessage = 'Áü≠Èìæ‰∏çÂ≠òÂú®ÔºåÂèØËÉΩÂ∑≤Ë¢´Âà†Èô§';
                } else if (error.message.includes('HTTP 404')) {
                    errorMessage = 'Áü≠Èìæ‰∏çÂ≠òÂú®';
                } else if (error.message.includes('HTTP 500')) {
                    errorMessage = 'ÊúçÂä°Âô®ÂÜÖÈÉ®ÈîôËØØÔºåËØ∑Á®çÂêéÈáçËØï';
                }

                showResult('manageResult', false, '‚ùå Âà†Èô§Â§±Ë¥•', \`<p>\${errorMessage}</p>\`);
            } finally {
                // ÊÅ¢Â§çÊåâÈíÆÁä∂ÊÄÅ
                if (deleteBtn) {
                    setLoading(deleteBtn, false);
                    deleteBtn.textContent = 'Âà†Èô§Áü≠Èìæ';
                }
            }
        }

        function copyToClipboard(text) {
            if (navigator.clipboard && window.isSecureContext) {
                navigator.clipboard.writeText(text).then(() => {
                    // ÂàõÂª∫Â§çÂà∂ÊàêÂäüÁöÑËßÜËßâÂèçÈ¶à
                    const event = document.querySelector('.copy-btn');
                    const originalText = event.textContent;
                    event.textContent = '‚úÖ Â∑≤Â§çÂà∂';
                    event.style.background = '#10b981';
                    
                    setTimeout(() => {
                        event.textContent = originalText;
                        event.style.background = '';
                    }, 2000);
                }).catch(() => {
                    fallbackCopyTextToClipboard(text);
                });
            } else {
                fallbackCopyTextToClipboard(text);
            }
        }

        function fallbackCopyTextToClipboard(text) {
            const textArea = document.createElement("textarea");
            textArea.value = text;
            textArea.style.position = "fixed";
            textArea.style.left = "-999999px";
            textArea.style.top = "-999999px";
            document.body.appendChild(textArea);
            textArea.focus();
            textArea.select();
            
            try {
                document.execCommand('copy');
                alert('üìã Áü≠ÈìæÂ∑≤Â§çÂà∂Âà∞Ââ™Ë¥¥ÊùøÔºÅ');
            } catch (err) {
                alert('‚ùå Â§çÂà∂Â§±Ë¥•ÔºåËØ∑ÊâãÂä®Â§çÂà∂');
            }
            
            document.body.removeChild(textArea);
        }

        // Ê∑ªÂä†ÈîÆÁõòÂø´Êç∑ÈîÆÊîØÊåÅ
        document.addEventListener('keydown', (e) => {
            if (e.ctrlKey && e.key === 'Enter') {
                e.preventDefault();
                if (document.activeElement.closest('#shortenForm')) {
                    document.getElementById('shortenForm').dispatchEvent(new Event('submit'));
                }
            }
        });

        // Ê∑ªÂä†Ë°®ÂçïÈ™åËØÅÂ¢ûÂº∫
        document.getElementById('originalUrl').addEventListener('blur', function() {
            const url = this.value.trim();
            if (url && !url.startsWith('http://') && !url.startsWith('https://')) {
                this.value = 'https://' + url;
            }
        });

        // Ê∑ªÂä†ËæìÂÖ•ÂÆûÊó∂È™åËØÅ
        document.getElementById('customCode').addEventListener('input', function() {
            this.value = this.value.replace(/[^a-zA-Z0-9-_]/g, '');
        });
    </script>
</body>
</html>
  `
  return c.html(html)
})

// API: ÂàõÂª∫Áü≠Èìæ
app.post('/api/shorten', async (c) => {
  try {
    const body = await c.req.json().catch(() => null)

    if (!body) {
      return c.json({ error: 'ËØ∑Ê±Ç‰ΩìÊ†ºÂºèÈîôËØØ' }, 400)
    }

    const { url, customCode, expiresInDays } = body

    if (!url || typeof url !== 'string') {
      return c.json({ error: 'URL ‰∏çËÉΩ‰∏∫Á©∫‰∏îÂøÖÈ°ªÊòØÂ≠óÁ¨¶‰∏≤' }, 400)
    }

    if (url.length > 2048) {
      return c.json({ error: 'URL ÈïøÂ∫¶‰∏çËÉΩË∂ÖËøá 2048 ‰∏™Â≠óÁ¨¶' }, 400)
    }

    // È™åËØÅËá™ÂÆö‰πâÁü≠Á†Å
    if (customCode && typeof customCode !== 'string') {
      return c.json({ error: 'Ëá™ÂÆö‰πâÁü≠Á†ÅÂøÖÈ°ªÊòØÂ≠óÁ¨¶‰∏≤' }, 400)
    }

    // È™åËØÅËøáÊúüÂ§©Êï∞
    if (expiresInDays !== undefined) {
      if (typeof expiresInDays !== 'number' || expiresInDays < 1 || expiresInDays > 365) {
        return c.json({ error: 'ËøáÊúüÂ§©Êï∞ÂøÖÈ°ªÊòØ 1-365 ‰πãÈó¥ÁöÑÊï∞Â≠ó' }, 400)
      }
    }

    // È™åËØÅÂíåÊ†áÂáÜÂåñ URL
    const normalizedUrl = normalizeUrl(url.trim())
    if (!isValidUrl(normalizedUrl)) {
      return c.json({ error: 'Êó†ÊïàÁöÑ URL Ê†ºÂºèÔºåËØ∑Á°Æ‰øùÂåÖÂê´ÊúâÊïàÁöÑÂüüÂêç' }, 400)
    }

    // ÁîüÊàêÂîØ‰∏ÄÁü≠Á†Å
    const shortCode = await generateUniqueShortCode(c.env.URL_STORE, customCode)

    // ÂàõÂª∫ URL Êï∞ÊçÆ
    const urlData = createUrlData(normalizedUrl, shortCode, expiresInDays)

    // Â≠òÂÇ®Âà∞ KV
    await c.env.URL_STORE.put(shortCode, JSON.stringify(urlData))

    // ÊûÑÂª∫Áü≠Èìæ URL
    const requestUrl = c.req.url
    const origin = requestUrl.substring(0, requestUrl.indexOf('/', 8)) // Ëé∑ÂèñÂçèËÆÆ+ÂüüÂêçÈÉ®ÂàÜ
    const shortUrl = `${origin}/${shortCode}`

    return c.json({
      shortCode,
      originalUrl: normalizedUrl,
      shortUrl,
      createdAt: urlData.createdAt,
      expiresAt: urlData.expiresAt
    })

  } catch (error) {
    // ËÆ∞ÂΩïÈîôËØØÔºàÂú® Cloudflare Workers ‰∏≠ÂèØÁî®Ôºâ
    return c.json({
      error: error instanceof Error ? error.message : 'ÂàõÂª∫Áü≠ÈìæÂ§±Ë¥•'
    }, 500)
  }
})

// API: Ëé∑ÂèñÁü≠ÈìæÁªüËÆ°‰ø°ÊÅØ
app.get('/api/stats/:shortCode', async (c) => {
  try {
    const shortCode = c.req.param('shortCode')

    // È™åËØÅÁü≠Á†Å
    if (!shortCode || typeof shortCode !== 'string' || shortCode.trim() === '') {
      return c.json({ error: 'Áü≠Á†Å‰∏çËÉΩ‰∏∫Á©∫' }, 400)
    }

    const trimmedShortCode = shortCode.trim()
    
    // È™åËØÅÁü≠Á†ÅÊ†ºÂºè
    if (trimmedShortCode.length < 3 || trimmedShortCode.length > 10) {
      return c.json({ error: 'Áü≠Á†ÅÈïøÂ∫¶ÂøÖÈ°ªÂú®3-10‰Ωç‰πãÈó¥' }, 400)
    }

    // ‰ªé KV Â≠òÂÇ®‰∏≠Ëé∑ÂèñÊï∞ÊçÆ
    let data: string | null = null
    try {
      data = await c.env.URL_STORE.get(trimmedShortCode)
    } catch (kvError) {
      return c.json({ error: 'KV Â≠òÂÇ®ËÆøÈóÆÂ§±Ë¥•' }, 500)
    }

    if (!data) {
      return c.json({ error: 'Áü≠Èìæ‰∏çÂ≠òÂú®' }, 404)
    }

    let urlData: UrlData
    try {
      urlData = JSON.parse(data)
    } catch (parseError) {
      return c.json({ error: 'Êï∞ÊçÆÊ†ºÂºèÈîôËØØ' }, 500)
    }

    // È™åËØÅÊï∞ÊçÆÂÆåÊï¥ÊÄß
    if (!urlData.shortCode || !urlData.originalUrl) {
      return c.json({ error: 'Êï∞ÊçÆ‰∏çÂÆåÊï¥' }, 500)
    }

    return c.json({
      shortCode: urlData.shortCode,
      originalUrl: urlData.originalUrl,
      createdAt: urlData.createdAt,
      expiresAt: urlData.expiresAt || null,
      clickCount: urlData.clickCount || 0,
      lastAccessed: urlData.lastAccessed || null
    })

  } catch (error) {
    return c.json({ 
      error: 'Ëé∑ÂèñÁªüËÆ°‰ø°ÊÅØÂ§±Ë¥•', 
      details: error instanceof Error ? error.message : 'Êú™Áü•ÈîôËØØ' 
    }, 500)
  }
})

// API: Âà†Èô§Áü≠Èìæ
app.delete('/api/:shortCode', async (c) => {
  try {
    const shortCode = c.req.param('shortCode')

    // È™åËØÅÁü≠Á†Å
    if (!shortCode || typeof shortCode !== 'string' || shortCode.trim() === '') {
      return c.json({ error: 'Áü≠Á†Å‰∏çËÉΩ‰∏∫Á©∫' }, 400)
    }

    const trimmedShortCode = shortCode.trim()
    
    // È™åËØÅÁü≠Á†ÅÊ†ºÂºè
    if (trimmedShortCode.length < 3 || trimmedShortCode.length > 10) {
      return c.json({ error: 'Áü≠Á†ÅÈïøÂ∫¶ÂøÖÈ°ªÂú®3-10‰Ωç‰πãÈó¥' }, 400)
    }

    // ‰ªé KV Â≠òÂÇ®‰∏≠Ê£ÄÊü•ÊòØÂê¶Â≠òÂú®
    let data: string | null = null
    try {
      data = await c.env.URL_STORE.get(trimmedShortCode)
    } catch (kvError) {
      return c.json({ error: 'KV Â≠òÂÇ®ËÆøÈóÆÂ§±Ë¥•' }, 500)
    }

    if (!data) {
      return c.json({ error: 'Áü≠Èìæ‰∏çÂ≠òÂú®' }, 404)
    }

    // Âà†Èô§Áü≠Èìæ
    try {
      await c.env.URL_STORE.delete(trimmedShortCode)
    } catch (kvError) {
      return c.json({ error: 'KV Â≠òÂÇ®Âà†Èô§Â§±Ë¥•' }, 500)
    }

    return c.json({ message: 'Áü≠ÈìæÂà†Èô§ÊàêÂäü' })

  } catch (error) {
    return c.json({ 
      error: 'Âà†Èô§Áü≠ÈìæÂ§±Ë¥•', 
      details: error instanceof Error ? error.message : 'Êú™Áü•ÈîôËØØ' 
    }, 500)
  }
})

// ÈáçÂÆöÂêëÂäüËÉΩ - ÂøÖÈ°ªÊîæÂú®ÊúÄÂêéÔºåÈÅøÂÖç‰∏é API Ë∑ØÁî±ÂÜ≤Á™Å
app.get('/:shortCode', async (c) => {
  try {
    const shortCode = c.req.param('shortCode')

    if (!shortCode) {
      return c.text('Áü≠Á†Å‰∏çËÉΩ‰∏∫Á©∫', 400)
    }

    // Ë∑≥Ëøá API Ë∑ØÂæÑ
    if (shortCode.startsWith('api')) {
      return c.text('Not Found', 404)
    }

    const data = await c.env.URL_STORE.get(shortCode)
    if (!data) {
      return c.text('Áü≠Èìæ‰∏çÂ≠òÂú®', 404)
    }

    const urlData: UrlData = JSON.parse(data)

    // Ê£ÄÊü•ÊòØÂê¶ËøáÊúü
    if (urlData.expiresAt && new Date() > new Date(urlData.expiresAt)) {
      return c.text('Áü≠ÈìæÂ∑≤ËøáÊúü', 410)
    }

    // Êõ¥Êñ∞ËÆøÈóÆÁªüËÆ°
    urlData.clickCount += 1
    urlData.lastAccessed = new Date().toISOString()

    // ÂºÇÊ≠•Êõ¥Êñ∞ÁªüËÆ°‰ø°ÊÅØÔºà‰∏çÁ≠âÂæÖÂÆåÊàêÔºâ
    c.env.URL_STORE.put(shortCode, JSON.stringify(urlData))

    // ÈáçÂÆöÂêëÂà∞ÂéüÂßã URL
    return c.redirect(urlData.originalUrl, 302)

  } catch (error) {
    return c.text('ÈáçÂÆöÂêëÂ§±Ë¥•', 500)
  }
})

export default app
